var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var documents_exports = {};
__export(documents_exports, {
  $documents: () => $documents
});
module.exports = __toCommonJS(documents_exports);
var import_core = require("../../core");
var import_lazy = require("../../lazy");
var import_util = require("../../util");
const $documents = (_, expr, options) => {
  const docs = (0, import_core.computeValue)(null, expr, null, options);
  (0, import_util.assert)((0, import_util.isArray)(docs), "$documents: expression must resolve to an array.");
  const iter = (0, import_lazy.Lazy)(docs);
  const mode = options.processingMode;
  return mode & import_core.ProcessingMode.CLONE_ALL ? iter.map(import_util.cloneDeep) : iter;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  $documents
});
