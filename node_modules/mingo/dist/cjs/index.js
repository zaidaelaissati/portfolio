var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var index_exports = {};
__export(index_exports, {
  Aggregator: () => import_aggregator2.Aggregator,
  ProcessingMode: () => import_core2.ProcessingMode,
  Query: () => import_query2.Query,
  aggregate: () => aggregate,
  createUpdater: () => import_updater2.createUpdater,
  default: () => index_default,
  find: () => find,
  update: () => import_updater2.update
});
module.exports = __toCommonJS(index_exports);
var import_basic = require("./init/basic");
var import_aggregator = require("./aggregator");
var import_core = require("./core");
var import_query = require("./query");
var import_updater = require("./updater");
var import_aggregator2 = require("./aggregator");
var import_core2 = require("./core");
var import_query2 = require("./query");
var import_updater2 = require("./updater");
function find(collection, criteria, projection, options) {
  return new import_query.Query(criteria, options).find(collection, projection);
}
function aggregate(collection, pipeline, options) {
  return new import_aggregator.Aggregator(pipeline, options).run(collection);
}
var index_default = {
  Aggregator: import_aggregator.Aggregator,
  ProcessingMode: import_core.ProcessingMode,
  Query: import_query.Query,
  aggregate,
  createUpdater: import_updater.createUpdater,
  find,
  update: import_updater.update
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Aggregator,
  ProcessingMode,
  Query,
  aggregate,
  createUpdater,
  find,
  update
});
